LCD_I2C                                                                                                                 PAGE 1
  0096                   1             scl     equ     P1.6
  0097                   2             sda     equ     P1.7
                         3
                         4             org     0000h
0000 0102                5             ajmp    inicio
                         6
                         7     Inicio:
0002 1115                8             acall   LCD_init
                         9     loop:
0004 75F082             10             mov     b,#10000010b
0007 120145             11             call    position
000A 12012D             12             call    escrevetabela
                        13     auxloop:
000D 120121             14             call    msgleft
0010 120160             15             call    delay30ms
0013 80F8               16             jmp     auxloop
                        17
                        18     LCD_init:
0015 7A03               19                     mov     R2,#03h
                        20     LCDStartAux:
0017 3174               21             acall   delay15ms       ;Initializing display
0019 75E030             22             mov     acc,#00110000b   ;(D7,D6,D5,D4, ,E,Rw,Rs) define o que envia
001C 113A               23             acall   sendLCD
001E DAF7               24             djnz    R2,LCDStartAux
                        25
                        26             ; Set interface to be 4 bits long
0020 75E020             27             mov     acc,#00100000b   ;(D7,D6,D5,D4, ,E,Rw,Rs) define o que envia
0023 113A               28             acall   sendLCD
                        29
0025 75E02C             30             mov     acc,#00101100b   ;(D7,D6,D5,D4, ,E,Rw,Rs) define o que envia
0028 116E               31             acall   send_inst
                        32
                        33             ;Display on
002A 75E00F             34             mov     acc,#00001111b   ;(D7,D6,D5,D4, ,E,Rw,Rs) define o que envia
002D 116E               35             acall   send_inst
                        36
                        37             ;Display clear
002F 75E001             38             mov     acc,#00000001b   ;(D7,D6,D5,D4, ,E,Rw,Rs) define o que envia
0032 116E               39             acall   send_inst
                        40
                        41             ;Entry mode set
0034 75E002             42             mov     acc,#00000010b   ;(D7,D6,D5,D4, ,E,Rw,Rs) define o que envia
0037 116E               43             acall   send_inst
0039 22                 44             ret
                        45     ;----------------------------------
                        46     SendLCD:
003A 7B03               47             mov     R3,#03h
                        48     SendLCDaux:
003C 11A5               49             acall   sendPCF
003E 33                 50                     rlc     a
003F B2E2               51                     cpl     acc.2
0041 DBF9               52                     djnz    R3,SendLCDaux
0043 22                 53                     ret
                        54     ;----------------------------------
                        55     send_data:
0044 120169             56             call    delay1ms
0047 120169             57             call    delay1ms
004A 75F001             58             mov     b,#00000001b
004D 33                 59             rlc     a
004E 92F7               60             mov     b.7,c
0050 33                 61             rlc     a
0051 92F6               62             mov     b.6,c
0053 33                 63             rlc     a
0054 92F5               64             mov     b.5,c
0056 33                 65             rlc     a
0057 92F4               66             mov     b.4,c
0059 C0E0               67             push    acc
005B 119F               68             acall   PreSend
005D D0E0               69             pop     acc
005F 33                 70             rlc     a
0060 92F7               71             mov     b.7,c           ;nao conectado
0062 33                 72             rlc     a
0063 92F6               73             mov     b.6,c
0065 33                 74             rlc     a
0066 92F5               75             mov     b.5,c
0068 33                 76             rlc     a
0069 92F4               77             mov     b.4,c
006B 119F               78             acall   PreSend
006D 22                 79             ret
                        80     ;----------------------------------
                        81     send_inst:
006E C0E0               82             push    acc
0070 120169             83             call    delay1ms
0073 120169             84             call    delay1ms
0076 D0E0               85             pop     acc
0078 75F000             86             mov     b,#00000000b
007B 33                 87             rlc     a
007C 92F7               88             mov     b.7,c
007E 33                 89             rlc     a
007F 92F6               90             mov     b.6,c
0081 33                 91             rlc     a
0082 92F5               92             mov     b.5,c
0084 33                 93             rlc     a
0085 92F4               94             mov     b.4,c
0087 C0E0               95             push    acc
0089 119F               96             acall   PreSend
008B D0E0               97             pop     acc
008D 75F000             98             mov     b,#00000000b
0090 33                 99             rlc     a
0091 92F7              100             mov     b.7,c           ;nao conectado
0093 33                101             rlc     a
0094 92F6              102             mov     b.6,c
0096 33                103             rlc     a
0097 92F5              104             mov     b.5,c
0099 33                105             rlc     a
009A 92F4              106             mov     b.4,c
009C 119F              107             acall   PreSend
009E 22                108             ret
                       109     PreSend:
009F 85F0E0            110             mov     acc,b
00A2 113A              111             call    sendLCD
00A4 22                112             ret
                       113     ;----------------------------------
                       114     SendPCF:
00A5 C0E0              115             push    acc             ;sub-rotina de start do PCF
00A7 744E              116             mov     a,#01001110b    ;(D7,D6,D5,D4, ,E,Rw,Rs)        endereço 27h do PCF e modo escrita
00A9 D296              117             setb    scl
00AB D297              118             setb    sda
00AD 315D              119             acall   delay6us        ;atraso de 6 us para t: SU;STA
                       120
00AF C297              121             clr     sda
00B1 315D              122             acall   delay6us        ;atraso de 6us para t: HD;STA
00B3 7808              123             mov     R0,#08h
                       124     SendPCFWrite:                   ;sub-rotina de escrever no PCF
00B5 33                125             rlc     a               ;desloca o bit mais sig. para a o carry
00B6 C296              126             clr     scl             ;vou escrever
00B8 9297              127             mov     sda,C           ;envia o bit
00BA 315D              128             acall   delay6us        ;delay de 6us para t: LOW
                       129
00BC D296              130             setb    scl             ;lê o bit
00BE 315D              131             acall   delay6us        ;delay de 6us para t: HIGH
                       132
00C0 D8F3              133             djnz    R0,SendPCFWrite
00C2 D0E0              134             pop     acc
                       135
00C4 1200E6            136             call    SendPCFAck
                       137     EnviaData:
00C7 7808              138             mov     R0,#08h
                       139                                     ;(D7,D6,D5,D4, ,E,Rw,Rs) dados a serem enviados
                       140     EnviaData2:                     ;sub-rotina de escrever no PCF
00C9 33                141             rlc     a               ;desloca o bit mais sig. para a o carry
00CA C296              142             clr     scl             ;vou escrever
00CC 9297              143             mov     sda,C           ;envia o bit
00CE 315D              144             acall   delay6us        ;delay de 6us para t: LOW
00D0 D296              145             setb    scl             ;lê o bit
00D2 315D              146             acall   delay6us        ;delay de 6us para t: HIGH
00D4 D8F3              147             djnz    R0,enviadata2
00D6 1200E6            148             call    SendPCFAck
                       149     StopBit:
00D9 C296              150             clr     scl             ;vou escrever
00DB C297              151             clr     sda
00DD 315D              152             acall   delay6us
                       153
00DF D296              154             setb    scl
00E1 315D              155             acall   delay6us
                       156
00E3 D297              157             setb    sda
00E5 22                158             ret
                       159
                       160     SendPCFAck:
00E6 C296              161             clr     scl             ;vou escrever
00E8 D297              162             setb    sda
00EA 315D              163             acall   delay6us        ;2 us
                       164
00EC D296              165             setb    scl             ;bit de acknowledge
00EE 315D              166             acall   delay6us
00F0 22                167             ret
                       168
                       169     ;---------------------------------
                       170     displayON:
00F1 75E00F            171             mov     acc,#0Fh                ;0000 1111b     ;displayonoff   ;D=C=B= 1 (cursor, display e
00F4 116E              172             acall   send_inst
00F6 22                173             RET
                       174     displayOFF:
00F7 75E004            175             mov     acc,#04h                ;0000 1000b     ;displayonoff   ;D=C=B= 1 (cursor, display e
00FA 116E              176             acall   send_inst
00FC 22                177             RET
                       178     clear:
00FD 75E001            179             mov     acc,#01h                ;0000 0001b     ;Clear          ;Limpa todo o display e retor
0100 116E              180             acall   send_inst
0102 22                181             ret
                       182     homeCursor:
0103 75E002            183             mov     acc,#02h                ;0000 001x  ; retornar o curso a linhaxcoluna - 1x1
0106 116E              184             acall   send_inst
0108 22                185             ret
                       186     cursorLEFT:
0109 75E010            187             mov     acc,#10h                ;Move o curso (C=0) para a esquerda(R=0)
010C 116E              188             acall   send_inst
010E 22                189             ret
                       190     cursorRIGHT:
010F 75E014            191             mov     acc,#14h                ; Move o curso (C=0) para a direita(R=1)
0112 116E              192             acall   send_inst
0114 22                193             ret
                       194     espaco:
0115 75E020            195             mov     acc,#' '                ; Move o curso (C=0) para a direita(R=1)
0118 1144              196             acall   send_data
011A 22                197             ret
                       198     SegundaLinha:
011B 75E0C0            199             mov     acc,#0C0h               ;1AAA AAAA ; para mover para segunda linha colocamos o endere
011E 116E              200             acall   send_inst
0120 22                201             ret
                       202     msgLEFT:
0121 75E018            203             mov     acc,#18h                ;Move o MENSSAGEM  E O CURSOR (C=1) para a ESQUERDA(R=0), ist
0124 116E              204             acall   send_inst       ;direita
0126 22                205             ret
                       206     msgRIGHT:
0127 75E01C            207             mov     acc,#1Ch                ;Move o MENSSAGEM E O CURSOR (C=1) para a DIREITA(R=1), isto
012A 116E              208             acall   send_inst       ;esquerda
012C 22                209             ret
                       210     ;-----------------------------------
                       211     escreveTabela:
012D C0E0              212             PUSH    ACC
012F 900193            213             mov     dptr,#WORDS
                       214     auxt:
0132 7400              215             MOV     A,#00H
0134 93                216             MOVC    A,@A+dptr
0135 B40003            217             Cjne    A,#00h,envia
0138 020142            218             jmp     fim
                       219     envia:
013B 1144              220             acall   send_data
013D A3                221             inc     dptr
013E 7400              222             MOV     A,#00H
0140 80F0              223             jmp     auxt
                       224     fim:
0142 D0E0              225             pop     ACC
0144 22                226             ret
                       227     ;---------------------------------
                       228     Position:
                       229             ;pega valor do registrador B (b.7 informa qual a linha e o restante a coluna)
0145 C0E0              230             push    acc
0147 E5F0              231             mov     a,b
0149 30E708            232             jnb     acc.7,Line1
                       233     Line2:
014C C2E7              234             clr     acc.7
014E 243F              235             add     a,#3fh          ;soma o valor da coluna com o ultimo valor da linha 1
0150 D2E7              236             setb    acc.7
0152 2158              237             ajmp    column
                       238     Line1:
0154 9401              239             subb    a,#00000001b
0156 D2E7              240             setb    a.7
                       241     Column:
0158 116E              242             acall   send_inst
015A D0E0              243             pop     acc
015C 22                244             ret
                       245     ;-----------------------------------
                       246     Delay6us:                       ;2(acall) + 2(nop) + 2(ret)
015D 00                247             nop                     ;1 us
015E 00                248             nop                     ;1 us
015F 22                249             ret                     ;2 us
                       250     ;------------------------------------
                       251     Delay30ms:                      ;30032 us
0160 7FFD              252             mov     R7,#0FDh
                       253     Delay30msAux:                   ;30032 = 1+3*59+59*253*2
0162 7E3B              254             mov     R6,#3Bh
0164 DEFE              255             djnz    R6,$
0166 DFFA              256             djnz    R7,Delay30msAux
0168 22                257             ret
                       258     ;-----------------------------------------------
                       259     delay1ms:               ;2
0169 74F8              260             mov     a,#0F8h ;1
016B D5E0FD            261             djnz    acc,$   ;248*2
016E 74F9              262             mov     a,#0F9h ;1
0170 D5E0FD            263             djnz    acc,$   ;249*2
0173 22                264             ret             ;2
                       265                             ;1000 us = 1 ms
                       266     ;-----------------------------------------------
                       267     delay15ms:              ;2
0174 3169              268             acall   delay1ms
0176 3169              269             acall   delay1ms
0178 3169              270             acall   delay1ms
017A 3169              271             acall   delay1ms
017C 3169              272             acall   delay1ms
017E 3169              273             acall   delay1ms
0180 3169              274             acall   delay1ms
0182 3169              275             acall   delay1ms
0184 3169              276             acall   delay1ms
0186 3169              277             acall   delay1ms
0188 3169              278             acall   delay1ms
018A 3169              279             acall   delay1ms
018C 3169              280             acall   delay1ms
018E 3169              281             acall   delay1ms
0190 3169              282             acall   delay1ms
0192 22                283             ret
                       284     ;-----------------------------------------------
                       285             ;Dados memória de programa
                       286     WORDS:
0193 5155454D20        287             db 'QUEM EH LEONARDO ?',00H
     4548204C45
     4F4E415244
     4F203F00
                       288     end
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXLOOP. . . . . . . . . . . . . . .  C  ADDR  000DH
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
AUXT . . . . . . . . . . . . . . . .  C  ADDR  0132H
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLEAR. . . . . . . . . . . . . . . .  C  ADDR  00FDH  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
COLUMN . . . . . . . . . . . . . . .  C  ADDR  0158H
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CURSORLEFT . . . . . . . . . . . . .  C  ADDR  0109H  NOT USED
CURSORRIGHT. . . . . . . . . . . . .  C  ADDR  010FH  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DELAY15MS. . . . . . . . . . . . . .  C  ADDR  0174H
DELAY1MS . . . . . . . . . . . . . .  C  ADDR  0169H
DELAY30MS. . . . . . . . . . . . . .  C  ADDR  0160H
DELAY30MSAUX . . . . . . . . . . . .  C  ADDR  0162H
DELAY6US . . . . . . . . . . . . . .  C  ADDR  015DH
DISPLAYOFF . . . . . . . . . . . . .  C  ADDR  00F7H  NOT USED
DISPLAYON. . . . . . . . . . . . . .  C  ADDR  00F1H  NOT USED
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ENVIA. . . . . . . . . . . . . . . .  C  ADDR  013BH
ENVIADATA. . . . . . . . . . . . . .  C  ADDR  00C7H  NOT USED
ENVIADATA2 . . . . . . . . . . . . .  C  ADDR  00C9H
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ESCREVETABELA. . . . . . . . . . . .  C  ADDR  012DH
ESPACO . . . . . . . . . . . . . . .  C  ADDR  0115H  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
FIM. . . . . . . . . . . . . . . . .  C  ADDR  0142H
HOMECURSOR . . . . . . . . . . . . .  C  ADDR  0103H  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INICIO . . . . . . . . . . . . . . .  C  ADDR  0002H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LCDSTARTAUX. . . . . . . . . . . . .  C  ADDR  0017H
LCD_INIT . . . . . . . . . . . . . .  C  ADDR  0015H
LINE1. . . . . . . . . . . . . . . .  C  ADDR  0154H
LINE2. . . . . . . . . . . . . . . .  C  ADDR  014CH  NOT USED
LOOP . . . . . . . . . . . . . . . .  C  ADDR  0004H  NOT USED
MSGLEFT. . . . . . . . . . . . . . .  C  ADDR  0121H
MSGRIGHT . . . . . . . . . . . . . .  C  ADDR  0127H  NOT USED
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H  NOT USED
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H  NOT USED
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
POSITION . . . . . . . . . . . . . .  C  ADDR  0145H
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PRESEND. . . . . . . . . . . . . . .  C  ADDR  009FH
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCL. . . . . . . . . . . . . . . . .  N  NUMB  0096H
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SDA. . . . . . . . . . . . . . . . .  N  NUMB  0097H
SEGUNDALINHA . . . . . . . . . . . .  C  ADDR  011BH  NOT USED
SENDLCD. . . . . . . . . . . . . . .  C  ADDR  003AH
SENDLCDAUX . . . . . . . . . . . . .  C  ADDR  003CH
SENDPCF. . . . . . . . . . . . . . .  C  ADDR  00A5H
SENDPCFACK . . . . . . . . . . . . .  C  ADDR  00E6H
SENDPCFWRITE . . . . . . . . . . . .  C  ADDR  00B5H
SEND_DATA. . . . . . . . . . . . . .  C  ADDR  0044H
SEND_INST. . . . . . . . . . . . . .  C  ADDR  006EH
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
STOPBIT. . . . . . . . . . . . . . .  C  ADDR  00D9H  NOT USED
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WORDS. . . . . . . . . . . . . . . .  C  ADDR  0193H
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED